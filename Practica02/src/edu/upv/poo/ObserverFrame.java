package edu.upv.poo;

/**
 * Representa el Frame del observer que recibe las notificaciones/eventos 
 * definidos en ReceptorListener.
 * @author luisroberto
 */
public class ObserverFrame 
        extends javax.swing.JFrame
        implements ReceptorListener {

    private SubjectFrame subjectFrame;
    
    /**
     * Creates new form ObserverFrame
     */
    public ObserverFrame(SubjectFrame subjectFrame) {
        initComponents();
        this.subjectFrame = subjectFrame;
        subjectFrame.addReceptorListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtNotificacionesRecibidas = new javax.swing.JTextArea();
        btnPararNotificaciones = new javax.swing.JButton();
        btnRecibirNotificaciones = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Observer");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtNotificacionesRecibidas.setColumns(20);
        txtNotificacionesRecibidas.setRows(5);
        jScrollPane1.setViewportView(txtNotificacionesRecibidas);

        btnPararNotificaciones.setText("Parar Notificaciones");
        btnPararNotificaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPararNotificacionesActionPerformed(evt);
            }
        });

        btnRecibirNotificaciones.setText("Recibir Notificaciones");
        btnRecibirNotificaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecibirNotificacionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRecibirNotificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPararNotificaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRecibirNotificaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPararNotificaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        subjectFrame.removeReceptorListener(this);
    }//GEN-LAST:event_formWindowClosing

    private void btnRecibirNotificacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecibirNotificacionesActionPerformed
        subjectFrame.addReceptorListener(this);
    }//GEN-LAST:event_btnRecibirNotificacionesActionPerformed

    private void btnPararNotificacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPararNotificacionesActionPerformed
        subjectFrame.removeReceptorListener(this);
    }//GEN-LAST:event_btnPararNotificacionesActionPerformed

    @Override
    public void notificacionRecibida(NotificacionEvent e) {
        String registro = 
                e.getSource().getClass().getSimpleName() + " -> " + 
                e.getAlgunDato();
        this.txtNotificacionesRecibidas.append(registro + "\n");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPararNotificaciones;
    private javax.swing.JButton btnRecibirNotificaciones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtNotificacionesRecibidas;
    // End of variables declaration//GEN-END:variables
}
